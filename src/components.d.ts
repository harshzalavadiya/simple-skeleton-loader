/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import '@stencil/core';




export namespace Components {

  interface SkeletonLoader {
    'animated': boolean;
    'borderRadius': string;
    'color': string;
    'count': number;
    'height': string;
    'heightRandomness': number;
    'width': string;
    'widthRandomness': number;
  }
  interface SkeletonLoaderAttributes extends StencilHTMLAttributes {
    'animated'?: boolean;
    'borderRadius'?: string;
    'color'?: string;
    'count'?: number;
    'height'?: string;
    'heightRandomness'?: number;
    'width'?: string;
    'widthRandomness'?: number;
  }
}

declare global {
  interface StencilElementInterfaces {
    'SkeletonLoader': Components.SkeletonLoader;
  }

  interface StencilIntrinsicElements {
    'skeleton-loader': Components.SkeletonLoaderAttributes;
  }


  interface HTMLSkeletonLoaderElement extends Components.SkeletonLoader, HTMLStencilElement {}
  var HTMLSkeletonLoaderElement: {
    prototype: HTMLSkeletonLoaderElement;
    new (): HTMLSkeletonLoaderElement;
  };

  interface HTMLElementTagNameMap {
    'skeleton-loader': HTMLSkeletonLoaderElement
  }

  interface ElementTagNameMap {
    'skeleton-loader': HTMLSkeletonLoaderElement;
  }


  export namespace JSX {
    export interface Element {}
    export interface IntrinsicElements extends StencilIntrinsicElements {
      [tagName: string]: any;
    }
  }
  export interface HTMLAttributes extends StencilHTMLAttributes {}

}
